import time
from utils import load_json, save_json, SKLAD_FILE

# ---------- –°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π (–†–∞–±–æ—Ç–∞ —Å–æ —Å–∫–ª–∞–¥–æ–º) ----------------

def add_product(product_id, name, category, price, quantity):      # --------- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥
    sklad = load_json(SKLAD_FILE)
    sklad[product_id] = {
        "name": name,
        "category": category,
        "price": price, 
        "quantity": quantity
    }
    save_json(SKLAD_FILE, sklad)
    time.sleep(0.5)
    print(f"–¢–æ–≤–∞—Ä {name} –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ —Å–∫–ª–∞–¥.")

def remove_product(product_id):                      # ------------ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Å–∫–ª–∞–¥–∞
    sklad = load_json(SKLAD_FILE)
    if product_id in sklad:
        deleted = sklad.pop(product_id)
        save_json(SKLAD_FILE, sklad)
        time.sleep(0.5)
        print(f"üóëÔ∏è –¢–æ–≤–∞—Ä {deleted['name']} —É–¥–∞–ª—ë–Ω —Å–æ —Å–∫–ª–∞–¥–∞.")
    else:
        time.sleep(0.5)
        print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")

def show_sklad():                                  # ------------ –ü–æ–∫–∞–∑–∞—Ç—å —Å–∫–ª–∞–¥
    sklad = load_json(SKLAD_FILE)
    if not sklad:
        print("üì¶ –°–∫–ª–∞–¥ –ø—É—Å—Ç.")
        return
    time.sleep(0.5)
    print("\n---------–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Å–∫–ª–∞–¥–∞---------")
    for pid, info in sklad.items():
        print(f"[{pid}] {info['name']} | –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {info['category']} | –¶–µ–Ω–∞: {info['price']} | –ö–æ–ª-–≤–æ: {info['quantity']}")

def update_quantity(product_id, new_quantity):    # ------------ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–∞
    sklad = load_json(SKLAD_FILE)
    if product_id in sklad:
        sklad[product_id]["quantity"] = new_quantity
        save_json(SKLAD_FILE, sklad)
        time.sleep(0.5)
        print(f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ {sklad[product_id]['name']} –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {new_quantity}.")
    else:
        time.sleep(0.5)
        print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")

def update_price(product_id, new_price):          # ------------- –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
    sklad = load_json(SKLAD_FILE)
    if product_id in sklad:
        sklad[product_id]["price"] = new_price
        save_json(SKLAD_FILE, sklad)
        time.sleep(0.5)
        print(f"üîÑ –¶–µ–Ω–∞ –Ω–∞ —Ç–æ–≤–∞—Ä {sklad[product_id]['name']} –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {new_price}")
    else:
        time.sleep(0.5)
        print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# -------------- –ú–µ–Ω—é --------------------

def sklad_menu():                   # ------------- –ú–µ–Ω—é —Å–∫–ª–∞–¥–∞
    while True:
        print("\n---------–°–∫–ª–∞–¥---------")
        print("1.‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä")
        print("2.üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä")
        print("3.üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É")
        print("4.üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
        print("5.üì¶ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã")
        print("0.‚ùå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

        try:
            choice = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞: "))
        except ValueError:
            print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
            continue
        if choice == 0:
            time.sleep(0.5)
            print("–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
            break

        elif choice == 1:
            time.sleep(0.5)
            pid = input("ID —Ç–æ–≤–∞—Ä–∞: ").strip()
            name = input("–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ").strip()
            category = input("–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞: ").strip()
            try:
                price = int(input("–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: "))
                quantity = int(input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: "))
                if price < 0 or quantity < 0:
                    print("‚ùå –¶–µ–Ω–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏.")
                    continue
                if not pid or not name or not category:
                    print("‚ùå –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.")
                    continue
                add_product(pid, name, category, price, quantity)
            except ValueError:
                print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –¥–ª—è —Ü–µ–Ω—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞.")

        elif choice == 2:
            time.sleep(0.5)
            pid = input("–í–≤–µ–¥–∏—Ç–µ ID –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å: ").strip()
            if not pid:
                print("‚ùå ID –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
                continue
            remove_product(pid)

        elif choice == 3:
            time.sleep(0.5)
            pid = input("ID —Ç–æ–≤–∞—Ä–∞: ").strip()
            if not pid:
                print("‚ùå ID –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
                continue
            try:
                new_price = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É: "))
                if new_price < 0:
                    print("‚ùå –¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                    continue
                update_price(pid, new_price)
            except ValueError:
                print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É.")
        
        elif choice == 4:
            time.sleep(0.5)
            pid = input("ID —Ç–æ–≤–∞—Ä–∞: ").strip()
            if not pid:
                print("‚ùå ID –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
                continue
            try:
                new_quantity = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: "))
                if new_quantity < 0:
                    print("‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                    continue
                update_quantity(pid, new_quantity)
            except ValueError:
                print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.")

        elif choice == 5:
            time.sleep(0.5)
            show_sklad()


if __name__ == "__main__":
    sklad_menu()